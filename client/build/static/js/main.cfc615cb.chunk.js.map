{"version":3,"sources":["BIGTOP.jpeg","utils/api.js","utils/MarkerContext.js","components/Search.js","components/AddFile.js","components/MapContainer.js","components/form.js","components/AddModal.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","name","email","show","latitude","longitude","photo","console","log","axios","post","location","lat","lng","get","address","MarkerContext","createContext","MarkerProvider","children","useState","list","setList","Provider","value","Search","allData","setAllData","setFilteredData","context","useContext","useEffect","api","then","res","data","catch","error","Form","Row","Col","lg","Group","controlId","Control","type","placeholder","style","marginBottom","marginLeft","onChange","event","target","result","filter","username","search","length","handleSearch","Button","variant","onClick","e","preventDefault","block","AddFile","styles","require","MapContainer","selected","setSelected","marker","googleMapsApiKey","process","mapContainerStyle","height","width","opacity","options","zoom","center","map","item","key","position","onSelect","clickable","onCloseClick","fontSize","src","AddForm","setName","setEmail","setShow","setAddress","currentLatitude","setCurrentLatitude","currentLongitude","setCurrentLongitude","setLatitude","setLongitude","setPhoto","fileInput","useRef","a","alert","apiLatitude","apiLongitude","err","navigator","geolocation","getCurrentPosition","coords","Label","ref","className","FormData","append","current","files","fetch","mode","method","body","ok","Error","statusText","json","postResponse","Location","postImage","AddYourself","props","Modal","size","aria-labelledby","centered","Header","Title","id","Body","Footer","onHide","window","reload","AddModal","React","modalShow","setModalShow","Jumbotron","fluid","Container","paddingTop","paddingBottom","color","App","backgroundSize","backgroundImage","background","backgroundPositionY","margin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","origin","addEventListener","response","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,qC,4rDCE5B,EAEH,SAAUC,EAAMC,EAAOC,EAAMC,EAAUC,EAAWC,GAE1D,OADAC,QAAQC,IAAIP,EAAMC,EAAOC,EAAMC,GACxBK,IAAMC,KAAK,eAAgB,CAC9BT,KAAMA,EACNC,MAAOA,EACPC,KAAMA,EACNQ,SAAU,CACNC,IAAKR,EACLS,IAAKR,GAETC,MAAOA,KAZA,EAeD,WACV,OAAOG,IAAMK,IAAI,iBAhBN,EAwBJ,SAASC,GAChB,OAAON,IAAMK,IACX,6FACYC,IC1BLC,EAAgBC,0BAGhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,EAAwBC,mBAAU,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OAHAf,QAAQC,IAAIa,GAIV,kBAACL,EAAcO,SAAf,CACEC,MAAO,CACLH,OACAC,YAGDH,ICkFQM,MA/Ff,WACE,MAA6BL,mBAAS,IAAtC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAuCP,mBAASM,GAAhD,mBAAoBE,GAApB,WAGMC,EAAUC,qBAAWd,GA+D3B,OAvCAe,qBAAU,WACRC,IACCC,MAAK,SAAAC,GACJ3B,QAAQC,IAAI0B,EAAIC,MAChBR,EAAWO,EAAIC,MACfP,EAAgBM,EAAIC,MACpBN,EAAQP,QAAQY,EAAIC,SAErBC,OAAM,SAAAC,GACL9B,QAAQC,IAAI,uBAAyB6B,QAGzC,IA4BE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IAEP,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBACpB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,eACpCC,MAAO,CAACC,aAAc,OAAQC,WAAY,QAC1CC,SAAU,SAACC,GAAD,OAtEH,SAACA,GACpB,IAAI3B,EAAQ2B,EAAMC,OAAO5B,MACrB6B,EAAS,GAOb,GANA9C,QAAQC,IAAIgB,IAEZ6B,EAAS3B,EAAQ4B,QAAO,SAACnB,GACvB,OAAwC,IAAjCA,EAAKoB,SAASC,OAAOhC,OAGnBiC,OAAS,EAAG,CAKrBJ,EAHa3B,EAAQ4B,QAAO,SAACnB,GAC3B,OAAoC,IAA7BA,EAAKhC,KAAKqD,OAAOhC,MAG1BjB,QAAQC,IAAI6C,GAGdzB,EAAgByB,GAChBxB,EAAQP,QAAQ+B,GAmDgBK,CAAaP,QAMvC,kBAACX,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACkB,EAAA,EAAD,CAAQC,QAAQ,UAAUf,KAAK,SAASgB,QApBlD,SAAqBC,GACnBA,EAAEC,kBAmBoEC,OAAK,GAAnE,e,MCdGC,ICpETC,EAASC,EAAQ,IA+ERC,EA7EM,WACnB,MAAkChD,mBAAS,IAA3C,mBAAQiD,EAAR,KAAkBC,EAAlB,KACA/D,QAAQC,IAAI6D,GAEZ,IAIME,EAASzC,qBAAWd,GACtBT,QAAQC,IAAI+D,EAAOlD,MAYvB,OACE,kBAAC,IAAD,CACGmD,iBA1BWC,2CA4BZ,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACEC,kBAjBY,CAChBC,OAAQ,OACRC,MAAO,OACPC,QAAS,OAgBLC,QAAS,CAACZ,OAAQA,GAElBa,KAAM,IACNC,OAhBgB,CACpBpE,IAAK,QAASC,IAAK,SAiBd0D,EAAOlD,KAAK4D,KAAI,SAAAC,GACb,OAEI,kBAAC,IAAD,CACEC,IAAKD,EAAK3B,SACV6B,SAAUF,EAAKvE,SACfkD,QAAS,kBArCR,SAAAqB,GACXZ,EAAYY,GAoCaG,CAASH,SAMjCb,EAAS1D,UAEJ,kBAAC,IAAD,CACEyE,SAAUf,EAAS1D,SACnB2E,WAAW,EACXC,aAAc,kBAAMjB,EAAY,MAEhC,6BACE,uBAAGvB,MAAO,CAACyC,SAAU,SAAUnB,EAASpE,MACxC,2BAAIoE,EAASlE,MACb,2BAAIkE,EAASnE,OACZmE,EAAS/D,MACZ,yBAAKyC,MAAO,CAAC4B,OAAO,QAASC,MAAM,QAASa,IAAKpB,EAAS/D,QAAW,iC,gBCuJtEoF,MAtNf,WACI,MAAwBtE,mBAAS,IAAjC,mBAAOnB,EAAP,KAAa0F,EAAb,KACA,EAA0BvE,mBAAS,IAAnC,mBAAOlB,EAAP,KAAc0F,EAAd,KACA,EAAwBxE,mBAAS,IAAjC,mBAAOjB,EAAP,KAAa0F,EAAb,KACA,EAA8BzE,mBAAS,IAAvC,mBAAOL,EAAP,KAAgB+E,EAAhB,KACA,EAA8C1E,mBAAS,IAAvD,mBAAO2E,EAAP,KAAwBC,EAAxB,KACA,EAAgD5E,mBAAS,IAAzD,mBAAO6E,EAAP,KAAyBC,EAAzB,KACA,EAAgC9E,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiB+F,EAAjB,KACA,EAAkC/E,mBAAS,IAA3C,mBAAOf,EAAP,KAAkB+F,EAAlB,KACA,EAA0BhF,mBAAS,IAAnC,mBAAOd,EAAP,KAAc+F,EAAd,KACMC,EAAYC,iBAAO,MAVV,4CA2Ef,WAA2BzC,GAA3B,SAAA0C,EAAA,sDACI1C,EAAEC,iBA4CW,KAAT9D,GAAyB,KAAVC,GAAyB,KAATC,GAA2B,KAAZY,EAC9C0F,MAAM,wDAEQpG,EACZ2B,EAAe/B,EAAMC,EAAOC,EAAMC,EAAUC,EAAWC,GAIvD0B,EAFiBjB,GAGhBkB,MAAK,SAAAC,GACJ,IAAMwE,EAAcxE,EAAIC,KAAKA,KAAK,GAAG/B,SAC/BuG,EAAezE,EAAIC,KAAKA,KAAK,GAAG9B,UACtCE,QAAQC,IAAI,gBAAiBP,EAAMC,EAAOC,EAAMuG,EAAaC,GAE7D3E,EAAe/B,EAAMC,EAAOC,EAAMuG,EAAaC,EAAcrG,MAE9D8B,OAAM,SAAAwE,GAAG,OAAIrG,QAAQC,IAAIoG,MA7DpC,4CA3Ee,sBA8If,OAtFA7E,qBAAU,WACN8E,UAAUC,YAAYC,oBAAmB,SAAA3B,GACvC7E,QAAQC,IAAI4E,EAAS4B,QACrBhB,EAAmBZ,EAAS4B,OAAO5G,UACnC8F,EAAoBd,EAAS4B,OAAO3G,gBAG1C,IAgFE,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,QACpB,kBAACL,EAAA,EAAK2E,MAAN,aACA,kBAAC3E,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,kBACxCI,SAAU,SAACY,GAAD,OAAO6B,EAAQ7B,EAAEV,OAAO5B,QAClCA,MAAOvB,EACNA,KAAK,cAMP,6BAEA,kBAACqC,EAAA,EAAKI,MAAN,CAAYC,UAAU,SACpB,kBAACL,EAAA,EAAK2E,MAAN,cACA,kBAAC3E,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,QACxCI,SAAU,SAACY,GAAD,OAAO8B,EAAS9B,EAAEV,OAAO5B,QACnCA,MAAOtB,EACND,KAAK,WAMP,6BAEA,kBAACqC,EAAA,EAAKI,MAAN,CAAYC,UAAU,QACpB,kBAACL,EAAA,EAAK2E,MAAN,gCACA,kBAAC3E,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,OACxCI,SAAU,SAACY,GAAD,OAAO+B,EAAQ/B,EAAEV,OAAO5B,QAClCA,MAAOrB,EACNF,KAAK,UAMP,6BAEA,kBAACqC,EAAA,EAAKI,MAAN,CAAYC,UAAU,WACpB,kBAACL,EAAA,EAAK2E,MAAN,+BACA,kBAAC3E,EAAA,EAAKM,QAAN,CAAcC,KAAK,UAAUC,YAAY,UAAUI,SAAU,SAACY,GAAD,OAAOgC,EAAWhC,EAAEV,OAAO5B,QAAQA,MAAOT,IACvG,kBAAC4C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzHhC,SAAmBC,GACfA,EAAEC,iBACFoC,EAAYJ,GACZK,EAAaH,GACbH,EAAWC,EAAiBE,KAqH1B,yBAGF,6BAEA,kBAAC3D,EAAA,EAAKI,MAAN,CAAYC,UAAU,SACpB,2BACEE,KAAK,OACLqE,IAAKZ,EACLa,UAAU,mBAEZ,4BACEA,UAAU,MACVtD,QA3LkB,SAAAV,GACxBA,EAAMY,iBACN,IAAM5B,EAAO,IAAIiF,SACjB7G,QAAQC,IAAI8F,GACZnE,EAAKkF,OAAO,QAASf,EAAUgB,QAAQC,MAAM,IAC7ChH,QAAQC,IAAI2B,GACG,uCAAG,8BAAAqE,EAAA,+EAEIgB,MAAM,oBAAqB,CAC3CC,KAAM,OACNC,OAAQ,OACRC,KAAMxF,IALM,WAERD,EAFQ,QAOL0F,GAPK,sBAOK,IAAIC,MAAM3F,EAAI4F,YAPnB,uBAQa5F,EAAI6F,OARjB,cAQRC,EARQ,OASd3B,EAAS2B,EAAaC,UACtB1H,QAAQC,IAAI,cAAewH,EAAaC,UAV1B,kBAWPD,EAAaC,UAXN,kCAad1H,QAAQC,IAAR,MAbc,0DAAH,oDAgBf0H,IAsKMrF,KAAK,UAHP,WASF,kBAACc,EAAA,EAAD,CAAQC,QAAQ,UAAUf,KAAK,SAASgB,QA9M7B,6CA8MX,Y,QC7MR,SAASsE,EAAYC,GAOnB,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAGR,kBAACH,EAAA,EAAMI,OAAP,KACE,kBAACJ,EAAA,EAAMK,MAAP,CAAaC,GAAG,iCAAhB,kBAKF,kBAACN,EAAA,EAAMO,KAAP,KACE,gDACA,kBAAC,EAAD,OAGF,kBAACP,EAAA,EAAMQ,OAAP,KACE,kBAAClF,EAAA,EAAD,CAAQE,QAzBd,WACEuE,EAAMU,SACNC,OAAOpI,SAASqI,WAuBZ,WAwBSC,MAjBjB,WACE,MAAkCC,IAAM9H,UAAS,GAAjD,mBAAO+H,EAAP,KAAkBC,EAAlB,KAEA,OACE,oCACE,kBAACzF,EAAA,EAAD,CAAQC,QAAQ,UAAU0E,KAAK,KAAKtE,OAAK,EAACH,QAAS,kBAAMuF,GAAa,KAAtE,iBAIA,kBAAC,EAAD,CACEjJ,KAAMgJ,EACNL,OAAQ,kBAAMM,GAAa,QC5BpBX,MAlBf,WAEI,OACE,kBAACY,EAAA,EAAD,CAAWC,OAAK,GAEd,kBAACC,EAAA,EAAD,CAAWxG,MAAO,CAAC4B,OAAQ,QAAS6E,WAAY,QAASC,cAAe,UACtE,wBAAI1G,MAAO,CAAC2G,MAAO,UAAnB,mBACA,uBAAG3G,MAAO,CAAC2G,MAAO,UAAlB,2CAIA,kBAAC,EAAD,S,iBCUKC,MAlBf,WACE,OACE,yBAAKxC,UAAU,MACbpE,MAAO,CACL6G,eAAgB,QAChBC,gBAAiB,OAASC,IAAT,IACjBC,oBAAqB,MACrBC,OAAQ,IAEV,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTFC,EAAcC,QACW,cAA7BnB,OAAOpI,SAASwJ,UAEe,UAA7BpB,OAAOpI,SAASwJ,UAEhBpB,OAAOpI,SAASwJ,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBzD,UAAU0D,cACPC,SAASF,GACTrI,MAAK,SAAAwI,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfjE,UAAU0D,cAAcQ,WAK1BxK,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB4B,OAAM,SAAAC,GACL9B,QAAQ8B,MAAM,4CAA6CA,M,MC/DjE2I,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBtE,UAAW,CAGzE,GADkB,IAAIuE,IAAI3G,GAAwBsE,OAAOpI,UAC3C0K,SAAWtC,OAAOpI,SAAS0K,OAIvC,OAGFtC,OAAOuC,iBAAiB,QAAQ,WAC9B,IAAMhB,EAAK,UAAM7F,GAAN,sBAENwF,EAwCX,SAAiCK,GAE/B9C,MAAM8C,GACHrI,MAAK,SAAAsJ,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ3K,IAAI,gBAAgB4K,QAAQ,cAG7C7E,UAAU0D,cAAcoB,MAAM1J,MAAK,SAAAwI,GACjCA,EAAamB,aAAa3J,MAAK,WAC7B8G,OAAOpI,SAASqI,eAKpBqB,EAAgBC,MAGnBlI,OAAM,WACL7B,QAAQC,IACN,oEAzDAqL,CAAwBvB,GAHxBD,EAAgBC,OC5BxBwB,K","file":"static/js/main.cfc615cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BIGTOP.5995e5fc.jpeg\";","import axios from 'axios';\n\nexport default {\n\nsaveFriend: function (name, email, show, latitude, longitude, photo) {\n    console.log(name, email, show, latitude)\n    return axios.post('/api/friends', {\n        name: name, \n        email: email, \n        show: show, \n        location: {\n            lat: latitude,\n            lng: longitude\n        },\n        photo: photo\n    });\n  },\n  getFriends: function () {\n    return axios.get('/api/friends');\n  },\n  setLocation: function (name, latitude, longitude) {\n    return axios.put(\"/api/friends\", \n    { name: name , \n     latitude: latitude,\n     longitude: longitude })\n  },\n  geocode: function(address) {\n    return axios.get(\n      \"http://api.positionstack.com/v1/forward?access_key=\" + process.env.REACT_APP_GEOKEY +\n      \"&query=\" + address \n      )\n  },\n  getFriend: function (search) {\n    return axios.get('/api/friends', search);\n  },\n  updateFriend: function(image) {\n    return axios.put(\"/api/friends\", \n      {name: image.name, \n        photo: image.photo\n      }\n    )\n  },\n  postAWS: function (formState) {            \n  const postData = async () => {\n    const res = await fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formState)\n    })\n    const data = await res.json();\n    console.log(data);\n  }\n  postData();\n},\nupdateAWS: function (image) {            \n  const updateData = async () => {\n    // const res = await fetch('/api/users', {\n    const res = await fetch('/api/friends', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(image)\n    })\n    const data = await res.json();\n    console.log(data);\n  }\n  updateData();\n},\n\n}\n\n\n","\nimport React, { createContext, useState } from \"react\";\n\nexport const MarkerContext = createContext();\n\n// This context provider is passed to any component requiring the context\nexport const MarkerProvider = ({ children }) => {\n  const [list, setList] = useState( [] );\n  console.log(list)\n//   const [location, setLocation] = useState(\"Mars\");\n\n  return (\n    <MarkerContext.Provider\n      value={{\n        list,\n        setList,\n      }}\n    >\n      {children}\n    </MarkerContext.Provider>\n  );\n};\n\n\n\n\n\n\n// import React from \"react\";\n// // default context object with properties corresponding to Provider values\n\n// const MarkerContext = React.createContext({\n//     const [list, setList] = useState(\"William\");\n    \n//         friend:[\n//         {    \n//   name: \"\",\n//   email: \"\",\n//   show: \"\",\n//   location: \"\"}\n            \n//         ]\n\n// });\n\n// export default MarkerContext;","import React, { useState, useEffect, useContext } from \"react\"\nimport { Button, Form, Col, Row } from \"react-bootstrap\"\nimport api from \"../utils/api\"\nimport { MarkerContext } from \"../utils/MarkerContext\"\n\nfunction Search() {\n  const [allData,setAllData] = useState([]);\n  const [filteredData,setFilteredData] = useState(allData);\n  \n\n  const context = useContext(MarkerContext)\n\n  const handleSearch = (event) =>{\n    let value = event.target.value;\n    let result = [];\n    console.log(value)\n\n    result = allData.filter((data) => {\n      return data.username.search(value) !== -1;\n    });\n\n    if (result.length < 1) {\n      let showResult =[];\n      showResult = allData.filter((data) => {\n        return data.show.search(value) !== -1;\n      });\n      result = showResult;\n      console.log(result)\n    };\n\n    setFilteredData(result);\n    context.setList(result);\n  };\n\n  useEffect(() => {\n    api.getFriends()\n    .then(res => {\n      console.log(res.data)\n      setAllData(res.data);\n      setFilteredData(res.data);\n      context.setList(res.data)\n    })\n    .catch(error => {\n      console.log('Error getting data: ' + error);\n      })\n  }, \n  []);\n\n  //FOR DYNAMO\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const res = await fetch('/api/users');\n  //       const jsonData = await res.json();\n  //       console.log(jsonData)\n  //       // sort the array by createdAt property ordered by descending values\n  //       const data = jsonData.sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1);\n  //       setAllData([...data]);\n  //       setFilteredData([...data]);\n  //       context.setList([...data])\n  //       // setIsLoaded(true);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   fetchData();\n  //   console.log(allData)\n  // }, []);\n\n  function handleClick(e) { \n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <Form>\n        <Row>\n          <Col lg={11}>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control type=\"name\" placeholder=\"Find Someone\"\n                style={{marginBottom: \"20px\", marginLeft: \"10px\"}}\n                onChange={(event) =>handleSearch(event)}\n              />\n            </Form.Group>\n\n          </Col>\n\n          <Col lg={1}>\n            <Button variant=\"warning\" type=\"submit\" onClick={handleClick} block>\n              Search\n            </Button>\n          </Col>\n\n        </Row>\n      </Form>\n    </div>\n    )\n}\n\nexport default Search;","import React, { useRef, useState } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport api from '../utils/api'\n\nfunction AddFile(selected) {\n  const fileInput = useRef(null);\n  const [image, setImage] = useState({\n    //to update only provide the partition key and the sort key\n    name: selected.selected.name,\n    //FOR DYNAMO ONLNY USERNAME AND CREATEDAT\n    // username: selected.selected.username,\n    // createdAt: selected.selected.createdAt,\n    // email: selected.selected.email,\n    // show: selected.selected.show, \n    // location: selected.selected.location\n  })\n  console.log(image)\n  console.log(fileInput)\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // api.updateAWS(image)\n    api.updateFriend(image)\n  }\n\n  const handleImageUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    console.log(fileInput)\n    data.append('image', fileInput.current.files[0]);\n    console.log(data)\n    const postImage = async () => {\n      try {\n        const res = await fetch('/api/image-upload', {\n          mode: 'cors',\n          method: 'POST',\n          body: data\n        })\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setImage({...image, photo: postResponse.Location})\n        console.log(\"postImage: \", postResponse.Location)\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n    return (\n      <Form>\n          <input\n    type=\"file\"\n    ref={fileInput}\n    className=\"form-input p-2\"\n  />\n  <button \n    className=\"btn\" \n    onClick={handleImageUpload} \n    type=\"submit\"\n  >\n    Upload\n  </button>\n        {/* <Form.Group>\n          <Form.File id=\"exampleFormControlFile1\" ref={fileInput} label=\"Share a photo\" />\n        </Form.Group>*/}\n        <Button variant=\"warning\" size=\"sm\" onClick={handleSubmit} >\n        Add Photo\n      </Button> \n\n      </Form>\n    )\n}\n\nexport default AddFile;","import React, { useState, useContext } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport Search from \"./Search\"\nimport { MarkerContext } from \"../utils/MarkerContext\"\nimport AddFile from \"./AddFile\"\n\nconst googleKey = process.env.REACT_APP_APIKEY\nconst styles = require('./GoogleMapStyles.json')\n\nconst MapContainer = () => {\n  const [ selected, setSelected ] = useState({});\n  console.log(selected)\n\n  const onSelect = item => {\n        setSelected(item);\n      }\n\n  const marker = useContext(MarkerContext);\n      console.log(marker.list)\n\n  const mapStyles = {        \n    height: \"70vh\",\n    width: \"100%\",\n    opacity: \".85\"\n  };\n  \n  const defaultCenter = {\n    lat: 41.3851, lng: 2.1734\n  }\n  \n  return (\n    <LoadScript\n       googleMapsApiKey = {googleKey}>\n\n      <Search />\n\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n\n        options={{styles: styles}}\n\n        zoom={2.3}\n        center={defaultCenter}>\n\n        {marker.list.map(item => {\n            return (\n\n                <Marker \n                  key={item.username} \n                  position={item.location} \n                  onClick={() => onSelect(item)}\n                />\n            )\n        })\n        }\n         \n        {selected.location && \n            (\n              <InfoWindow\n                position={selected.location}\n                clickable={true}\n                onCloseClick={() => setSelected({})}\n              >\n                <div>\n                  <p style={{fontSize: \"20px\"}}>{selected.name}</p>\n                  <p>{selected.show}</p>\n                  <p>{selected.email}</p>\n                  {selected.photo ? \n                <img style={{height:\"200px\", width:\"auto\"}} src={selected.photo}/> : <p></p>\n                // <AddFile selected={selected} />\n                }\n\n                  \n\n                </div>\n              </InfoWindow>\n            )\n        }\n\n      </GoogleMap>\n\n    </LoadScript>\n\n  )\n}\n\nexport default MapContainer;","import React, { useState, useEffect, useRef } from \"react\"\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport api from '../utils/api'\n\nfunction AddForm() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [show, setShow] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [currentLatitude, setCurrentLatitude] = useState(\"\");\n    const [currentLongitude, setCurrentLongitude] = useState(\"\");\n    const [latitude, setLatitude] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    const [photo, setPhoto] = useState(\"\")\n    const fileInput = useRef(null);\n\n    const handleImageUpload = event => {\n      event.preventDefault();\n      const data = new FormData();\n      console.log(fileInput)\n      data.append('image', fileInput.current.files[0]);\n      console.log(data)\n      const postImage = async () => {\n        try {\n          const res = await fetch('/api/image-upload', {\n            mode: 'cors',\n            method: 'POST',\n            body: data\n          })\n          if (!res.ok) throw new Error(res.statusText);\n          const postResponse = await res.json();\n          setPhoto(postResponse.Location)\n          console.log(\"postImage: \", postResponse.Location)\n          return postResponse.Location;\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      postImage();\n    };\n\n    //FOR DYNAMO\n    // const [formState, setFormState] = useState({\n    //   username: \"\",\n    //   email: \"\",\n    //   show: \"\", \n    //   location: \n    //   {\n    //     // lat: \"\",\n    //     // lng: \"\"\n    //   }\n    // })\n\n    // console.log(formState)\n    // const handleChange = (event) => {\n    //     setFormState({ ...formState, [event.target.name]: event.target.value });\n    //   }\n    \n  \n    \n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log(position.coords);\n          setCurrentLatitude(position.coords.latitude);\n          setCurrentLongitude(position.coords.longitude);\n        })\n      }, \n    []);\n\n    function onAddress(e) {\n        e.preventDefault();\n        setLatitude(currentLatitude);\n        setLongitude(currentLongitude);\n        setAddress(currentLatitude, currentLongitude);\n        // setFormState({...formState, location: {lat: Number(currentLatitude), lng: Number(currentLongitude)}})\n        // console.log(formState)\n\n    };\n\n    async function AddYourself(e) {\n        e.preventDefault();\n        //FOR DYNAMO\n        // if (formState.username === \"\" || formState.email === \"\" || formState.show === \"\" ) {\n        //     alert(\"Please fill out your name, email, show, and location\");\n        // } else {\n        //   if (formState.location.lat || formState.location.lng) {\n        // console.log(formState)\n        // api.postAWS(formState)\n    \n      // else {\n      //         const location = address;\n      //       console.log(address)\n      //         api.geocode(location)\n      //         .then(res => {\n\n                \n      //           const apiLatitude = res.data.data[0].latitude\n      //           const apiLongitude = res.data.data[0].longitude\n\n      //           console.log(res, res.data.data[0].latitude)\n      //           console.log(formState)\n      //           setFormState({...formState, location: {lat: Number(apiLatitude), lng: Number(apiLongitude)}})\n      //           console.log(formState)\n      //         api.postAWS(formState)\n      //       })\n              \n\n            //   console.log(formState)\n            //   const postData = async () => {\n            //     const res = await fetch('/api/users', {\n            //       method: 'POST',\n            //       headers: {\n            //         Accept: 'application/json',\n            //         'Content-Type': 'application/json'\n            //       },\n            //       body: JSON.stringify(formState)\n            //     })\n            //     const data = await res.json();\n            //     console.log(data);\n            //   }\n            //   postData();\n        \n      \n\n        if (name === \"\" || email === \"\" || show === \"\" || address === \"\") {\n            alert(\"Please fill out your name, email, show, and location\");\n        } else {\n            if (latitude, longitude) {\n              api.saveFriend(name, email, show, latitude, longitude, photo);\n            } else {\n              const location = address;\n\n              api.geocode(location)\n              .then(res => {\n                const apiLatitude = res.data.data[0].latitude\n                const apiLongitude = res.data.data[0].longitude\n                console.log(\"Friend Data: \", name, email, show, apiLatitude, apiLongitude);\n        \n                api.saveFriend(name, email, show, apiLatitude, apiLongitude, photo)\n              })\n              .catch(err => console.log(err));\n            }\n        }\n    };\n  \n      \n    return (\n      <Form>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter your name\" \n         onChange={(e) => setName(e.target.value)} \n         value={name}\n          name=\"username\"\n          // onChange={handleChange}\n          // value={formState.username}\n          />\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Email\" \n         onChange={(e) => setEmail(e.target.value)} \n         value={email}\n          name=\"email\" \n          // onChange={handleChange}\n          // value={formState.email}\n          />\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"show\">\n          <Form.Label>Which show were you on?</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Show\" \n         onChange={(e) => setShow(e.target.value)} \n         value={show}\n          name=\"show\"\n          // onChange={handleChange}\n          // value={formState.show}\n          />\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Where are you located?</Form.Label>\n          <Form.Control type=\"address\" placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)} value={address}/>\n          <Button variant=\"success\" onClick={onAddress}>Use Current Location</Button> \n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"photo\">\n          <input\n            type=\"file\"\n            ref={fileInput}\n            className=\"form-input p-2\"\n          />\n          <button \n            className=\"btn\" \n            onClick={handleImageUpload} \n            type=\"submit\"\n          >\n            Upload\n          </button>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" onClick={AddYourself}>\n          Submit\n        </Button>\n\n      </Form>\n    )\n};\n\nexport default AddForm;\n","import React from \"react\"\nimport AddForm from './form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction AddYourself(props) {\n\n  function onClick() {\n    props.onHide()\n    window.location.reload();\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Add Yourself!\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <h4>Enter Your Info:</h4>\n        <AddForm />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={onClick}>Close</Button>\n      </Modal.Footer>\n\n    </Modal>\n    );\n  };\n  \nfunction AddModal() {\n  const [modalShow, setModalShow] = React.useState(false);\n  \n  return (\n    <>\n      <Button variant=\"primary\" size=\"lg\" block onClick={() => setModalShow(true)}>\n        Add Yourself!\n      </Button>\n  \n      <AddYourself\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n    );\n  };\n  \n  export default AddModal;","import React from \"react\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport AddModal from './AddModal'\n\nfunction Header() {\n\n    return(\n      <Jumbotron fluid>\n\n        <Container style={{height: \"200px\", paddingTop: \"150px\", paddingBottom: \"200px\"}}>\n          <h1 style={{color: \"white\"}}>Find Each Other</h1>\n          <p style={{color: \"white\"}}>\n            Your Circus Family is just a click away    \n          </p>\n\n          <AddModal />\n\n        </Container>\n\n      </Jumbotron>\n    )\n}\nexport default Header;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport MapContainer from \"./components/MapContainer\";\nimport { MarkerProvider } from \"./utils/MarkerContext\"\nimport Header from \"./components/Header\";\nimport background from \"./BIGTOP.jpeg\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\" \n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(` + background + `)`,\n        backgroundPositionY: \"30%\",\n        margin: 0\n      }}> \n      <MarkerProvider>\n        <Header />\n        <MapContainer />\n      </MarkerProvider>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}