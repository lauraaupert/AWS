{"version":3,"sources":["BIGTOP.jpeg","utils/api.js","utils/MarkerContext.js","components/Search.js","components/AddFile.js","components/MapContainer.js","components/form.js","components/AddModal.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","address","axios","get","formState","a","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","console","log","postData","image","updateData","MarkerContext","createContext","MarkerProvider","children","useState","list","setList","Provider","value","Search","allData","setAllData","setFilteredData","context","useContext","useEffect","jsonData","sort","b","createdAt","fetchData","Form","Row","Col","lg","Group","controlId","Control","type","placeholder","style","marginBottom","marginLeft","onChange","event","target","result","filter","username","search","length","show","handleSearch","Button","variant","onClick","e","preventDefault","block","AddFile","selected","fileInput","useRef","setImage","ref","className","FormData","append","current","files","mode","ok","Error","statusText","postResponse","photo","Location","postImage","size","api","styles","require","MapContainer","setSelected","marker","googleMapsApiKey","process","mapContainerStyle","height","width","opacity","options","zoom","center","lat","lng","map","item","key","position","location","onSelect","clickable","onCloseClick","fontSize","email","src","AddForm","setAddress","currentLatitude","setCurrentLatitude","currentLongitude","setCurrentLongitude","setLatitude","setLongitude","setFormState","handleChange","name","alert","then","apiLatitude","latitude","apiLongitude","longitude","Number","navigator","geolocation","getCurrentPosition","coords","Label","AddYourself","props","Modal","aria-labelledby","centered","Header","Title","id","Body","Footer","onHide","window","reload","AddModal","React","modalShow","setModalShow","Jumbotron","fluid","Container","paddingTop","paddingBottom","color","App","backgroundSize","backgroundImage","background","backgroundPositionY","margin","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","response","status","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,qC,msDCE5B,EAuBJ,SAASC,GAChB,OAAOC,IAAMC,IACX,6FACYF,IA1BH,EAgCJ,SAAUG,IACL,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,aAAc,CACpCC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAPR,cACTS,EADS,gBASIA,EAAIC,OATR,OASTC,EATS,OAUfC,QAAQC,IAAIF,GAVG,2CAAH,qDAYdG,IA7Ca,EA+CJ,SAAUC,IACH,uCAAG,8BAAAd,EAAA,sEACCC,MAAM,aAAc,CACpCC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUO,KAPN,cACXN,EADW,gBASEA,EAAIC,OATN,OASXC,EATW,OAUjBC,QAAQC,IAAIF,GAVK,2CAAH,qDAYhBK,IC3DWC,EAAgBC,0BAGhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,EAAwBC,mBAAU,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OAHAX,QAAQC,IAAIS,GAIV,kBAACL,EAAcO,SAAf,CACEC,MAAO,CACLH,OACAC,YAGDH,ICgFQM,MA7Ff,WACE,MAA6BL,mBAAS,IAAtC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAuCP,mBAASM,GAAhD,mBAAoBE,GAApB,WAGMC,EAAUC,qBAAWd,GA6D3B,OAxBAe,qBAAU,YACO,uCAAG,gCAAA/B,EAAA,+EAEIC,MAAM,cAFV,cAERO,EAFQ,gBAGSA,EAAIC,OAHb,OAGRuB,EAHQ,OAIdrB,QAAQC,IAAIoB,GAENtB,EAAOsB,EAASC,MAAK,SAACjC,EAAGkC,GAAJ,OAAWlC,EAAEmC,UAAYD,EAAEC,UAAa,GAAK,KACxER,EAAW,YAAIjB,IACfkB,EAAgB,YAAIlB,IACpBmB,EAAQP,QAAR,YAAoBZ,IATN,kDAYdC,QAAQC,IAAR,MAZc,0DAAH,qDAefwB,GACAzB,QAAQC,IAAIc,KACX,IAOD,6BACE,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IAEP,kBAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBACpB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,YAAY,eACpCC,MAAO,CAACC,aAAc,OAAQC,WAAY,QAC1CC,SAAU,SAACC,GAAD,OApEH,SAACA,GACpB,IAAI1B,EAAQ0B,EAAMC,OAAO3B,MACrB4B,EAAS,GAOb,GANAzC,QAAQC,IAAIY,IAEZ4B,EAAS1B,EAAQ2B,QAAO,SAAC3C,GACvB,OAAwC,IAAjCA,EAAK4C,SAASC,OAAO/B,OAGnBgC,OAAS,EAAG,CAKrBJ,EAHa1B,EAAQ2B,QAAO,SAAC3C,GAC3B,OAAoC,IAA7BA,EAAK+C,KAAKF,OAAO/B,MAG1Bb,QAAQC,IAAIwC,GAGdxB,EAAgBwB,GAChBvB,EAAQP,QAAQ8B,GAiDgBM,CAAaR,QAMvC,kBAACX,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,UAAUhB,KAAK,SAASiB,QApBlD,SAAqBC,GACnBA,EAAEC,kBAmBoEC,OAAK,GAAnE,e,QCfGC,MAnEf,SAAiBC,GACf,IAAMC,EAAYC,iBAAO,MACzB,EAA0BhD,mBAAS,CAEjCkC,SAAUY,EAASA,SAASZ,SAC5BnB,UAAW+B,EAASA,SAAS/B,YAH/B,mBAAOrB,EAAP,KAAcuD,EAAd,KAwCE,OAhCF1D,QAAQC,IAAIE,GACZH,QAAQC,IAAIuD,GAgCR,kBAAC9B,EAAA,EAAD,KACI,2BACNO,KAAK,OACL0B,IAAKH,EACLI,UAAU,mBAEZ,4BACEA,UAAU,MACVV,QAjCwB,SAAAX,GACxBA,EAAMa,iBACN,IAAMrD,EAAO,IAAI8D,SACjB7D,QAAQC,IAAIuD,GACZzD,EAAK+D,OAAO,QAASN,EAAUO,QAAQC,MAAM,IAC7ChE,QAAQC,IAAIF,GACG,uCAAG,8BAAAV,EAAA,+EAEIC,MAAM,oBAAqB,CAC3C2E,KAAM,OACN1E,OAAQ,OACRG,KAAMK,IALM,WAERF,EAFQ,QAOLqE,GAPK,sBAOK,IAAIC,MAAMtE,EAAIuE,YAPnB,uBAQavE,EAAIC,OARjB,cAQRuE,EARQ,OASdX,EAAS,2BAAIvD,GAAL,IAAYmE,MAAOD,EAAaE,YACxCvE,QAAQC,IAAI,cAAeoE,EAAaE,UAV1B,kBAWPF,EAAaE,UAXN,kCAadvE,QAAQC,IAAR,MAbc,0DAAH,oDAgBfuE,IAYAvC,KAAK,UAHP,UAUM,kBAACe,EAAA,EAAD,CAAQC,QAAQ,UAAUwB,KAAK,KAAKvB,QA9C1C,SAAsBC,GACpBA,EAAEC,iBACFsB,EAAcvE,KA4CV,eCzDFwE,EAASC,EAAQ,IA8ERC,EA5EM,WACnB,MAAkCpE,mBAAS,IAA3C,mBAAQ8C,EAAR,KAAkBuB,EAAlB,KACA9E,QAAQC,IAAIsD,GAEZ,IAIMwB,EAAS5D,qBAAWd,GACtBL,QAAQC,IAAI8E,EAAOrE,MAYvB,OACE,kBAAC,IAAD,CACGsE,iBA1BWC,2CA4BZ,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACEC,kBAjBY,CAChBC,OAAQ,OACRC,MAAO,OACPC,QAAS,OAgBLC,QAAS,CAACX,OAAQA,GAElBY,KAAM,IACNC,OAhBgB,CACpBC,IAAK,QAASC,IAAK,SAiBdX,EAAOrE,KAAKiF,KAAI,SAAAC,GACb,OAEI,kBAAC,IAAD,CACEC,IAAKD,EAAKjD,SACVmD,SAAUF,EAAKG,SACf7C,QAAS,kBArCR,SAAA0C,GACXd,EAAYc,GAoCaI,CAASJ,SAMjCrC,EAASwC,UAEJ,kBAAC,IAAD,CACED,SAAUvC,EAASwC,SACnBE,WAAW,EACXC,aAAc,kBAAMpB,EAAY,MAEhC,6BACE,uBAAG3C,MAAO,CAACgE,SAAU,SAAU5C,EAASZ,UACxC,2BAAIY,EAAST,MACb,2BAAIS,EAAS6C,OACZ7C,EAASpD,MACZ,yBAAKgC,MAAO,CAACgD,OAAO,SAAUkB,IAAK9C,EAASpD,QAAW,kBAAC,EAAD,CAASoD,SAAUA,S,wBC8H3E+C,MA7Lf,WAII,MAA8B7F,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgBsH,EAAhB,KACA,EAA8C9F,mBAAS,IAAvD,mBAAO+F,EAAP,KAAwBC,EAAxB,KACA,EAAgDhG,mBAAS,IAAzD,mBAAOiG,EAAP,KAAyBC,EAAzB,KACA,EAAgClG,mBAAS,IAAzC,mBAAiBmG,GAAjB,WACA,EAAkCnG,mBAAS,IAA3C,mBAAkBoG,GAAlB,WAEA,EAAkCpG,mBAAS,CACzCkC,SAAU,GACVyD,MAAO,GACPtD,KAAM,GACNiD,SACA,KALF,mBAAO3G,EAAP,KAAkB0H,EAAlB,KAWA9G,QAAQC,IAAIb,GACZ,IAAM2H,EAAe,SAACxE,GAClBuE,EAAa,2BAAK1H,GAAN,kBAAkBmD,EAAMC,OAAOwE,KAAOzE,EAAMC,OAAO3B,UAvBpD,4CA+Cf,WAA2BsC,GAA3B,eAAA9D,EAAA,sDACI8D,EAAEC,iBACyB,KAAvBhE,EAAUuD,UAAuC,KAApBvD,EAAUgH,OAAmC,KAAnBhH,EAAU0D,KACjEmE,MAAM,wDAEJ7H,EAAU2G,SAASN,KAAOrG,EAAU2G,SAASL,KAUnD1F,QAAQC,IAAIb,GACZsF,EAAYtF,KAiBA2G,EAAW9G,EACnBe,QAAQC,IAAIhB,GACVyF,EAAYqB,GACXmB,MAAK,SAAArH,GAGJ,IAAMsH,EAActH,EAAIE,KAAKA,KAAK,GAAGqH,SAC/BC,EAAexH,EAAIE,KAAKA,KAAK,GAAGuH,UAEtCtH,QAAQC,IAAIJ,EAAKA,EAAIE,KAAKA,KAAK,GAAGqH,UAClCpH,QAAQC,IAAIb,GACZ0H,EAAa,2BAAI1H,GAAL,IAAgB2G,SAAU,CAACN,IAAK8B,OAAOJ,GAAczB,IAAK6B,OAAOF,OAC7ErH,QAAQC,IAAIb,GACdsF,EAAYtF,OA9CtB,4CA/Ce,sBA0If,OA9GAgC,qBAAU,WACNoG,UAAUC,YAAYC,oBAAmB,SAAA5B,GACvC9F,QAAQC,IAAI6F,EAAS6B,QACrBlB,EAAmBX,EAAS6B,OAAOP,UACnCT,EAAoBb,EAAS6B,OAAOL,gBAG1C,IAwGE,kBAAC5F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,QACpB,kBAACL,EAAA,EAAKkG,MAAN,aACA,kBAAClG,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,kBAEvC8E,KAAK,WACL1E,SAAUyE,EACVlG,MAAOzB,EAAUuD,YAGnB,6BAEA,kBAACjB,EAAA,EAAKI,MAAN,CAAYC,UAAU,SACpB,kBAACL,EAAA,EAAKkG,MAAN,cACA,kBAAClG,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,QAEvC8E,KAAK,QACL1E,SAAUyE,EACVlG,MAAOzB,EAAUgH,SAGnB,6BAEA,kBAAC1E,EAAA,EAAKI,MAAN,CAAYC,UAAU,QACpB,kBAACL,EAAA,EAAKkG,MAAN,gCACA,kBAAClG,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,OAEvC8E,KAAK,OACL1E,SAAUyE,EACVlG,MAAOzB,EAAU0D,QAGnB,6BAEA,kBAACpB,EAAA,EAAKI,MAAN,CAAYC,UAAU,WACpB,kBAACL,EAAA,EAAKkG,MAAN,+BACA,kBAAClG,EAAA,EAAKM,QAAN,CAAcC,KAAK,UAAUC,YAAY,UAAUI,SAAU,SAACa,GAAD,OAAOoD,EAAWpD,EAAEX,OAAO3B,QAAQA,MAAO5B,IACvG,kBAAC+D,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA3IhC,SAAmBC,GACfA,EAAEC,iBACFwD,EAAYJ,GACZK,EAAaH,GACbH,EAAWC,EAAiBE,GAC5BI,EAAa,2BAAI1H,GAAL,IAAgB2G,SAAU,CAACN,IAAK8B,OAAOf,GAAkBd,IAAK6B,OAAOb,OACjF1G,QAAQC,IAAIb,KAqIV,yBAGF,6BAEA,kBAAC4D,EAAA,EAAD,CAAQC,QAAQ,UAAUhB,KAAK,SAASiB,QArL7B,6CAqLX,Y,QCpLR,SAAS2E,EAAYC,GAOnB,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEErD,KAAK,KACLuD,kBAAgB,gCAChBC,UAAQ,IAGR,kBAACF,EAAA,EAAMG,OAAP,KACE,kBAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,iCAAhB,kBAKF,kBAACL,EAAA,EAAMM,KAAP,KACE,gDACA,kBAAC,EAAD,OAGF,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACtF,EAAA,EAAD,CAAQE,QAzBd,WACE4E,EAAMS,SACNC,OAAOzC,SAAS0C,WAuBZ,WAwBSC,MAjBjB,WACE,MAAkCC,IAAMlI,UAAS,GAAjD,mBAAOmI,EAAP,KAAkBC,EAAlB,KAEA,OACE,oCACE,kBAAC7F,EAAA,EAAD,CAAQC,QAAQ,UAAUwB,KAAK,KAAKpB,OAAK,EAACH,QAAS,kBAAM2F,GAAa,KAAtE,iBAIA,kBAAC,EAAD,CACE/F,KAAM8F,EACNL,OAAQ,kBAAMM,GAAa,QC5BpBX,MAlBf,WAEI,OACE,kBAACY,EAAA,EAAD,CAAWC,OAAK,GAEd,kBAACC,EAAA,EAAD,CAAW7G,MAAO,CAACgD,OAAQ,QAAS8D,WAAY,QAASC,cAAe,UACtE,wBAAI/G,MAAO,CAACgH,MAAO,UAAnB,mBACA,uBAAGhH,MAAO,CAACgH,MAAO,UAAlB,2CAIA,kBAAC,EAAD,S,iBCUKC,MAlBf,WACE,OACE,yBAAKxF,UAAU,MACbzB,MAAO,CACLkH,eAAgB,QAChBC,gBAAiB,OAASC,IAAT,IACjBC,oBAAqB,MACrBC,OAAQ,IAEV,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTFC,EAAcC,QACW,cAA7BnB,OAAOzC,SAAS6D,UAEe,UAA7BpB,OAAOzC,SAAS6D,UAEhBpB,OAAOzC,SAAS6D,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBvC,UAAUwC,cACPC,SAASF,GACT7C,MAAK,SAAAgD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf/C,UAAUwC,cAAcQ,WAK1BxK,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBwK,OAAM,SAAAC,GACL1K,QAAQ0K,MAAM,4CAA6CA,M,MC/DjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBtD,UAAW,CAGzE,GADkB,IAAIuD,IAAI9F,GAAwBuD,OAAOzC,UAC3CiF,SAAWxC,OAAOzC,SAASiF,OAIvC,OAGFxC,OAAOyC,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAM9E,GAAN,sBAENyE,EAwCX,SAAiCK,GAE/BzK,MAAMyK,GACH7C,MAAK,SAAAgE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAAS1L,QAAQL,IAAI,gBAAgBiM,QAAQ,cAG7C5D,UAAUwC,cAAcqB,MAAMnE,MAAK,SAAAgD,GACjCA,EAAaoB,aAAapE,MAAK,WAC7BsB,OAAOzC,SAAS0C,eAKpBqB,EAAgBC,MAGnBU,OAAM,WACLzK,QAAQC,IACN,oEAzDAsL,CAAwBxB,GAHxBD,EAAgBC,OC5BxByB,K","file":"static/js/main.d2be0539.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BIGTOP.5995e5fc.jpeg\";","import axios from 'axios';\n\nexport default {\n\nsaveFriend: function (name, email, show, latitude, longitude) {\n    console.log(name, email, show, latitude)\n    return axios.post('/api/friends', {\n        name: name, \n        email: email, \n        show: show, \n        location: {\n            lat: latitude,\n            lng: longitude\n        }\n    });\n  },\n  getFriends: function () {\n    return axios.get('/api/friends');\n  },\n  setLocation: function (name, latitude, longitude) {\n    return axios.put(\"/api/friends\", \n    { name: name , \n     latitude: latitude,\n     longitude: longitude })\n  },\n  geocode: function(address) {\n    return axios.get(\n      \"http://api.positionstack.com/v1/forward?access_key=\" + process.env.REACT_APP_GEOKEY +\n      \"&query=\" + address \n      )\n  },\n  getFriend: function (search) {\n    return axios.get('/api/friends', search);\n  },\n  postAWS: function (formState) {            \n  const postData = async () => {\n    const res = await fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formState)\n    })\n    const data = await res.json();\n    console.log(data);\n  }\n  postData();\n},\nupdateAWS: function (image) {            \n  const updateData = async () => {\n    const res = await fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(image)\n    })\n    const data = await res.json();\n    console.log(data);\n  }\n  updateData();\n},\n\n}\n\n\n","\nimport React, { createContext, useState } from \"react\";\n\nexport const MarkerContext = createContext();\n\n// This context provider is passed to any component requiring the context\nexport const MarkerProvider = ({ children }) => {\n  const [list, setList] = useState( [] );\n  console.log(list)\n//   const [location, setLocation] = useState(\"Mars\");\n\n  return (\n    <MarkerContext.Provider\n      value={{\n        list,\n        setList,\n      }}\n    >\n      {children}\n    </MarkerContext.Provider>\n  );\n};\n\n\n\n\n\n\n// import React from \"react\";\n// // default context object with properties corresponding to Provider values\n\n// const MarkerContext = React.createContext({\n//     const [list, setList] = useState(\"William\");\n    \n//         friend:[\n//         {    \n//   name: \"\",\n//   email: \"\",\n//   show: \"\",\n//   location: \"\"}\n            \n//         ]\n\n// });\n\n// export default MarkerContext;","import React, { useState, useEffect, useContext } from \"react\"\nimport { Button, Form, Col, Row } from \"react-bootstrap\"\nimport api from \"../utils/api\"\nimport { MarkerContext } from \"../utils/MarkerContext\"\n\nfunction Search() {\n  const [allData,setAllData] = useState([]);\n  const [filteredData,setFilteredData] = useState(allData);\n  \n\n  const context = useContext(MarkerContext)\n\n  const handleSearch = (event) =>{\n    let value = event.target.value;\n    let result = [];\n    console.log(value)\n\n    result = allData.filter((data) => {\n      return data.username.search(value) !== -1;\n    });\n\n    if (result.length < 1) {\n      let showResult =[];\n      showResult = allData.filter((data) => {\n        return data.show.search(value) !== -1;\n      });\n      result = showResult;\n      console.log(result)\n    };\n\n    setFilteredData(result);\n    context.setList(result);\n  };\n\n  // useEffect(() => {\n  //   api.getFriends()\n  //   .then(res => {\n  //     console.log(res.data)\n  //     setAllData(res.data);\n  //     setFilteredData(res.data);\n  //     context.setList(res.data)\n  //   })\n  //   .catch(error => {\n  //     console.log('Error getting data: ' + error);\n  //     })\n  // }, \n  // []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('/api/users');\n        const jsonData = await res.json();\n        console.log(jsonData)\n        // sort the array by createdAt property ordered by descending values\n        const data = jsonData.sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1);\n        setAllData([...data]);\n        setFilteredData([...data]);\n        context.setList([...data])\n        // setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n    console.log(allData)\n  }, []);\n\n  function handleClick(e) { \n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <Form>\n        <Row>\n          <Col lg={11}>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control type=\"name\" placeholder=\"Find Someone\"\n                style={{marginBottom: \"20px\", marginLeft: \"10px\"}}\n                onChange={(event) =>handleSearch(event)}\n              />\n            </Form.Group>\n\n          </Col>\n\n          <Col lg={1}>\n            <Button variant=\"warning\" type=\"submit\" onClick={handleClick} block>\n              Search\n            </Button>\n          </Col>\n\n        </Row>\n      </Form>\n    </div>\n    )\n}\n\nexport default Search;","import React, { useRef, useState } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport api from '../utils/api'\n\nfunction AddFile(selected) {\n  const fileInput = useRef(null);\n  const [image, setImage] = useState({\n    //to update only provide the partition key and the sort key\n    username: selected.selected.username,\n    createdAt: selected.selected.createdAt,\n    // email: selected.selected.email,\n    // show: selected.selected.show, \n    // location: selected.selected.location\n  })\n  console.log(image)\n  console.log(fileInput)\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    api.updateAWS(image)\n  }\n\n  const handleImageUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    console.log(fileInput)\n    data.append('image', fileInput.current.files[0]);\n    console.log(data)\n    const postImage = async () => {\n      try {\n        const res = await fetch('/api/image-upload', {\n          mode: 'cors',\n          method: 'POST',\n          body: data\n        })\n        if (!res.ok) throw new Error(res.statusText);\n        const postResponse = await res.json();\n        setImage({...image, photo: postResponse.Location})\n        console.log(\"postImage: \", postResponse.Location)\n        return postResponse.Location;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    postImage();\n  };\n    return (\n      <Form>\n          <input\n    type=\"file\"\n    ref={fileInput}\n    className=\"form-input p-2\"\n  />\n  <button \n    className=\"btn\" \n    onClick={handleImageUpload} \n    type=\"submit\"\n  >\n    Upload\n  </button>\n        {/* <Form.Group>\n          <Form.File id=\"exampleFormControlFile1\" ref={fileInput} label=\"Share a photo\" />\n        </Form.Group>*/}\n        <Button variant=\"warning\" size=\"sm\" onClick={handleSubmit} >\n        Add Photo\n      </Button> \n\n      </Form>\n    )\n}\n\nexport default AddFile;","import React, { useState, useContext } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport Search from \"./Search\"\nimport { MarkerContext } from \"../utils/MarkerContext\"\nimport AddFile from \"./AddFile\"\n\nconst googleKey = process.env.REACT_APP_APIKEY\nconst styles = require('./GoogleMapStyles.json')\n\nconst MapContainer = () => {\n  const [ selected, setSelected ] = useState({});\n  console.log(selected)\n\n  const onSelect = item => {\n        setSelected(item);\n      }\n\n  const marker = useContext(MarkerContext);\n      console.log(marker.list)\n\n  const mapStyles = {        \n    height: \"70vh\",\n    width: \"100%\",\n    opacity: \".85\"\n  };\n  \n  const defaultCenter = {\n    lat: 41.3851, lng: 2.1734\n  }\n  \n  return (\n    <LoadScript\n       googleMapsApiKey = {googleKey}>\n\n      <Search />\n\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n\n        options={{styles: styles}}\n\n        zoom={2.3}\n        center={defaultCenter}>\n\n        {marker.list.map(item => {\n            return (\n\n                <Marker \n                  key={item.username} \n                  position={item.location} \n                  onClick={() => onSelect(item)}\n                />\n            )\n        })\n        }\n         \n        {selected.location && \n            (\n              <InfoWindow\n                position={selected.location}\n                clickable={true}\n                onCloseClick={() => setSelected({})}\n              >\n                <div>\n                  <p style={{fontSize: \"20px\"}}>{selected.username}</p>\n                  <p>{selected.show}</p>\n                  <p>{selected.email}</p>\n                  {selected.image ? \n                <img style={{height:\"100px\"}} src={selected.image}/> : <AddFile selected={selected} />\n                }\n\n                  \n\n                </div>\n              </InfoWindow>\n            )\n        }\n\n      </GoogleMap>\n\n    </LoadScript>\n\n  )\n}\n\nexport default MapContainer;","import React, { useState, useEffect } from \"react\"\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport api from '../utils/api'\n\nfunction AddForm() {\n    // const [username, setName] = useState(\"\");\n    // const [email, setEmail] = useState(\"\");\n    // const [show, setShow] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [currentLatitude, setCurrentLatitude] = useState(\"\");\n    const [currentLongitude, setCurrentLongitude] = useState(\"\");\n    const [latitude, setLatitude] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n\n    const [formState, setFormState] = useState({\n      username: \"\",\n      email: \"\",\n      show: \"\", \n      location: \n      {\n        // lat: \"\",\n        // lng: \"\"\n      }\n    })\n\n    console.log(formState)\n    const handleChange = (event) => {\n        setFormState({ ...formState, [event.target.name]: event.target.value });\n      }\n    \n  \n    \n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log(position.coords);\n          setCurrentLatitude(position.coords.latitude);\n          setCurrentLongitude(position.coords.longitude);\n        })\n      }, \n    []);\n\n    function onAddress(e) {\n        e.preventDefault();\n        setLatitude(currentLatitude);\n        setLongitude(currentLongitude);\n        setAddress(currentLatitude, currentLongitude);\n        setFormState({...formState, location: {lat: Number(currentLatitude), lng: Number(currentLongitude)}})\n        console.log(formState)\n\n    };\n\n    async function AddYourself(e) {\n        e.preventDefault();\n        if (formState.username === \"\" || formState.email === \"\" || formState.show === \"\" ) {\n            alert(\"Please fill out your name, email, show, and location\");\n        } else {\n          if (formState.location.lat || formState.location.lng) {\n        //     const location = address;\n\n        //       api.geocode(location)\n        //       .then(res => {\n        //         setFormState({...formState, lat: res.data.data[0].latitude, lng: res.data.data[0].longitude})\n        //       })\n        //     }\n\n        // if (formState.lat, formState.lng) {\n        console.log(formState)\n        api.postAWS(formState)\n      //   const postData = async () => {\n      //     const res = await fetch('/api/users', {\n      //       method: 'POST',\n      //       headers: {\n      //         Accept: 'application/json',\n      //         'Content-Type': 'application/json'\n      //       },\n      //       body: JSON.stringify(formState)\n      //     })\n      //     const data = await res.json();\n      //     console.log(data);\n      //   }\n      //   postData();\n       } \n    \n      else {\n              const location = address;\n            console.log(address)\n              api.geocode(location)\n              .then(res => {\n\n                \n                const apiLatitude = res.data.data[0].latitude\n                const apiLongitude = res.data.data[0].longitude\n\n                console.log(res, res.data.data[0].latitude)\n                console.log(formState)\n                setFormState({...formState, location: {lat: Number(apiLatitude), lng: Number(apiLongitude)}})\n                console.log(formState)\n              api.postAWS(formState)\n            })\n              \n\n            //   console.log(formState)\n            //   const postData = async () => {\n            //     const res = await fetch('/api/users', {\n            //       method: 'POST',\n            //       headers: {\n            //         Accept: 'application/json',\n            //         'Content-Type': 'application/json'\n            //       },\n            //       body: JSON.stringify(formState)\n            //     })\n            //     const data = await res.json();\n            //     console.log(data);\n            //   }\n            //   postData();\n             } \n          }\n        }\n      \n\n        // if (username === \"\" || email === \"\" || show === \"\" || address === \"\") {\n        //     alert(\"Please fill out your name, email, show, and location\");\n        // } else {\n        //     if (latitude, longitude) {\n        //       api.saveFriend(name, email, show, latitude, longitude);\n        //     } else {\n        //       const location = address;\n\n        //       api.geocode(location)\n        //       .then(res => {\n        //         const apiLatitude = res.data.data[0].latitude\n        //         const apiLongitude = res.data.data[0].longitude\n        //         console.log(\"Friend Data: \", name, email, show, apiLatitude, apiLongitude);\n        \n        //         api.saveFriend(name, email, show, apiLatitude, apiLongitude)\n        //       })\n        //       .catch(err => console.log(err));\n        //     }\n        //}\n    //};\n  \n      \n    return (\n      <Form>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter your name\" \n         // onChange={(e) => setName(e.target.value)} \n          name=\"username\"\n          onChange={handleChange}\n          value={formState.username}/>\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Email\" \n         // onChange={(e) => setEmail(e.target.value)} \n          name=\"email\" \n          onChange={handleChange}\n          value={formState.email}/>\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"show\">\n          <Form.Label>Which show were you on?</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Show\" \n         // onChange={(e) => setShow(e.target.value)} \n          name=\"show\"\n          onChange={handleChange}\n          value={formState.show}/>\n        </Form.Group>\n\n        <br/>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Where are you located?</Form.Label>\n          <Form.Control type=\"address\" placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)} value={address}/>\n          <Button variant=\"success\" onClick={onAddress}>Use Current Location</Button> \n        </Form.Group>\n\n        <br/>\n\n        <Button variant=\"primary\" type=\"submit\" onClick={AddYourself}>\n          Submit\n        </Button>\n\n      </Form>\n    )\n};\n\nexport default AddForm;\n","import React from \"react\"\nimport AddForm from './form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction AddYourself(props) {\n\n  function onClick() {\n    props.onHide()\n    window.location.reload();\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Add Yourself!\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <h4>Enter Your Info:</h4>\n        <AddForm />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={onClick}>Close</Button>\n      </Modal.Footer>\n\n    </Modal>\n    );\n  };\n  \nfunction AddModal() {\n  const [modalShow, setModalShow] = React.useState(false);\n  \n  return (\n    <>\n      <Button variant=\"primary\" size=\"lg\" block onClick={() => setModalShow(true)}>\n        Add Yourself!\n      </Button>\n  \n      <AddYourself\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n    );\n  };\n  \n  export default AddModal;","import React from \"react\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport AddModal from './AddModal'\n\nfunction Header() {\n\n    return(\n      <Jumbotron fluid>\n\n        <Container style={{height: \"200px\", paddingTop: \"150px\", paddingBottom: \"200px\"}}>\n          <h1 style={{color: \"white\"}}>Find Each Other</h1>\n          <p style={{color: \"white\"}}>\n            Your Circus Family is just a click away    \n          </p>\n\n          <AddModal />\n\n        </Container>\n\n      </Jumbotron>\n    )\n}\nexport default Header;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport MapContainer from \"./components/MapContainer\";\nimport { MarkerProvider } from \"./utils/MarkerContext\"\nimport Header from \"./components/Header\";\nimport background from \"./BIGTOP.jpeg\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\" \n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(` + background + `)`,\n        backgroundPositionY: \"30%\",\n        margin: 0\n      }}> \n      <MarkerProvider>\n        <Header />\n        <MapContainer />\n      </MarkerProvider>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}